<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.wj</groupId>
    <artifactId>blog</artifactId>
    <version>${service.version}</version>
    <packaging>jar</packaging>
    <name>blog</name>
    <description>blog project for product department</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.6</version>
        <relativePath/>
        <!-- lookup parent from repository -->
    </parent>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <!--docker相关配置-->
        <docker.maven.plugin.version>1.2.0</docker.maven.plugin.version>
        <!--配置docker环境-->
        <docker.set.timezone.cmd1>/bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime </docker.set.timezone.cmd1>
        <docker.set.timezone.cmd2>echo 'Asia/Shanghai' >/etc/timezone</docker.set.timezone.cmd2>
        <!--maven里面配置serverid-->
        <docker.login.serverId>my-docker-registry</docker.login.serverId>
        <!--docker ip以及端口号-->
        <docker.hostName>docker.ip</docker.hostName>
        <docker.hostPort>2375</docker.hostPort>
        <!--docker私有库地址和端口号-->
        <docker.imageName>docker.hub</docker.imageName>
        <docker.imagePort>30002</docker.imagePort>

        <docker.imagePrefix>blog</docker.imagePrefix>
        <docker.baseImage.Java>openjdk:8</docker.baseImage.Java>
        <work.url>/usr/local/</work.url>
        <java.version>1.8</java.version>
        <mybatis-plus.version>3.5.1</mybatis-plus.version>
        <mybatis-plus-generator.version>3.5.1</mybatis-plus-generator.version>
        <mysql.version>8.0.16</mysql.version>
        <swagger.version>2.9.2</swagger.version>
        <jwt.version>0.9.1</jwt.version>
        <fastjson.version>1.2.75</fastjson.version>
        <httpclient.version>4.5.1</httpclient.version>
        <easyexcel.version>2.2.0-beta2</easyexcel.version>
        <aliyun.version>4.1.1</aliyun.version>
        <oss.version>3.9.1</oss.version>
        <jodatime.version>2.10.1</jodatime.version>
        <security.version>5.6.2</security.version>
        <druid.version>1.2.2</druid.version>
        <hutool.version>5.8.11</hutool.version>

        <service.default.port>8080</service.default.port>
        <service.version>1.0.0</service.version>
    </properties>

    <dependencies>
        <!--mybatis-plus 持久层-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatis-plus.version}</version>
        </dependency>


        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>

        <!--阿里数据源-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid.version}</version>
        </dependency>

        <!--swagger-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger.version}</version>
        </dependency>
        <!--swagger ui-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger.version}</version>
        </dependency>

        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jwt.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>easyexcel</artifactId>
            <version>${easyexcel.version}</version>
        </dependency>

        <dependency>
            <groupId>com.aliyun</groupId>
            <artifactId>aliyun-java-sdk-core</artifactId>
            <version>${aliyun.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>com.aliyun.oss</groupId>
            <artifactId>aliyun-sdk-oss</artifactId>
            <version>${oss.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>

        <!--日期时间工具-->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${jodatime.version}</version>
        </dependency>

        <!--aop-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!--             SpringSecurity 对 Web 应用进行权限管理 -->
        <!--            <dependency>-->
        <!--                <groupId>org.springframework.security</groupId>-->
        <!--                <artifactId>spring-security-web</artifactId>-->
        <!--                <version>${security.version}</version>-->
        <!--            </dependency>-->
        <!--            &lt;!&ndash; SpringSecurity 配置 &ndash;&gt;-->
        <!--            <dependency>-->
        <!--                <groupId>org.springframework.security</groupId>-->
        <!--                <artifactId>spring-security-config</artifactId>-->
        <!--                <version>${security.version}</version>-->
        <!--            </dependency>-->
        <!--使用shiro进行权限控制-->
        <!--代码自动生成-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-generator</artifactId>
            <version>${mybatis-plus-generator.version}</version>
        </dependency>

        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.28</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
    </dependencies>

    <!-- 项目打包时会将java目录中的*.xml文件也进行打包 -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <configuration>
<!--                    <serverId>${docker.uat.login.serverId}</serverId>-->
                    <dockerHost>http://${docker.hostName}:${docker.hostPort}</dockerHost>
                    <!--镜像的名称-->
<!--                    <imageName>-->
<!--                        ${docker.imageName}:${docker.imagePort}/${docker.imagePrefix}/${project.artifactId}:${service.version}-->
<!--                    </imageName>-->
                    <imageName>
                        ${project.artifactId}:${service.version}
                    </imageName>
                    <!--依赖的镜像-->
                    <baseImage>${docker.baseImage.Java}</baseImage>
                    <runs>
                        <!-- 配置环境变量 -->
                        <env>
                            <SPRING_CONFIG_NAME>application-uat</SPRING_CONFIG_NAME>
                            <SPRING_CONFIG_LOCATION>/usr/local</SPRING_CONFIG_LOCATION>
                        </env>
                        <run>${docker.set.timezone.cmd1}</run>
                        <run>${docker.set.timezone.cmd2}</run>
                    </runs>
                    <workdir>${work.url}</workdir>
                    <!--执行生成的 jar-->
                    <entryPoint>["java","-jar", "/${project.build.finalName}.jar"]</entryPoint>
                    <exposes>
                        <expose>${service.default.port}</expose>
                    </exposes>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.yaml</include>
                    <include>**/*.yml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
    </build>

</project>
